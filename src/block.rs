//!  Block Elements. `U+2580 - U+259F`
/// Contains an 8x8 font map for unicode points `U+2580 - U+259F` (block elements)
///
/// * `U+2580` (top half)
/// * `U+2581` (box 1/8)
/// * `U+2582` (box 2/8)
/// * `U+2583` (box 3/8)
/// * `U+2584` (bottom half)
/// * `U+2585` (box 5/8)
/// * `U+2586` (box 6/8)
/// * `U+2587` (box 7/8)
/// * `U+2588` (solid)
/// * `U+2589` (box 7/8)
/// * `U+258A` (box 6/8)
/// * `U+258B` (box 5/8)
/// * `U+258C` (left half)
/// * `U+258D` (box 3/8)
/// * `U+258E` (box 2/8)
/// * `U+258F` (box 1/8)
/// * `U+2590` (right half)
/// * `U+2591` (25% solid)
/// * `U+2592` (50% solid)
/// * `U+2593` (75% solid)
/// * `U+2594` (box 1/8)
/// * `U+2595` (box 1/8)
/// * `U+2596` (box bottom left)
/// * `U+2597` (box bottom right)
/// * `U+2598` (box top left)
/// * `U+2599` (boxes left and bottom)
/// * `U+259A` (boxes top-left and bottom right)
/// * `U+259B` (boxes top and left)
/// * `U+259C` (boxes top and right)
/// * `U+259D` (box top right)
/// * `U+259E` (boxes top right and bottom left)
/// * `U+259F` (boxes right and bottom)
pub const BLOCK: [[u8; 8]; 32] = [
    [0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00],
    [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF],
    [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF],
    [0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF],
    [0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF],
    [0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF],
    [0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF],
    [0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF],
    [0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF],
    [0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F],
    [0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F],
    [0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F],
    [0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F],
    [0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07],
    [0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03],
    [0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01],
    [0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0],
    [0x55, 0x00, 0xAA, 0x00, 0x55, 0x00, 0xAA, 0x00],
    [0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA],
    [0xFF, 0xAA, 0xFF, 0x55, 0xFF, 0xAA, 0xFF, 0x55],
    [0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
    [0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80],
    [0x00, 0x00, 0x00, 0x00, 0x0F, 0x0F, 0x0F, 0x0F],
    [0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0, 0xF0, 0xF0],
    [0x0F, 0x0F, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00],
    [0x0F, 0x0F, 0x0F, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF],
    [0x0F, 0x0F, 0x0F, 0x0F, 0xF0, 0xF0, 0xF0, 0xF0],
    [0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0x0F, 0x0F, 0x0F],
    [0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0xF0, 0xF0, 0xF0],
    [0xF0, 0xF0, 0xF0, 0xF0, 0x00, 0x00, 0x00, 0x00],
    [0xF0, 0xF0, 0xF0, 0xF0, 0x0F, 0x0F, 0x0F, 0x0F],
    [0xF0, 0xF0, 0xF0, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF],
];
